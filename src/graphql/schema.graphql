### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Ability {
  description: String!
  digimons: [DigimonInfo]
  id: ID!
  name: String!
}

type Digimon implements DigimonInfo {
  ability: Ability!
  attribute: DigimonAttribute!
  digimonType: DigimonType!
  equipSlot: Int!
  icon: String!
  id: ID!
  img: String!
  memory: Int!
  name: String!
  no: String!
  state: DigimonState!
}

"""attribute of digimon in game"""
enum DigimonAttribute {
  Dark
  Earth
  Electric
  Fire
  Light
  Neutral
  Plant
  Water
  Wind
}

interface DigimonInfo {
  icon: String!
  id: ID!
  img: String!
  name: String!
  no: String!
}

"""state of digimon in game"""
enum DigimonState {
  """state Armor"""
  Armor

  """state Baby"""
  Baby

  """state Champion"""
  Champion

  """state In-Training"""
  In_Training

  """state Mega"""
  Mega

  """state None"""
  None

  """state Rookie"""
  Rookie

  """state Ultimate"""
  Ultimate

  """state Ultra"""
  Ultra
}

"""type of digimon in game"""
enum DigimonType {
  Data
  Free
  Vaccine
  Virus
}

type Move {
  attribute: MoveAttribute!
  description: String!
  id: ID!
  inheritable: Boolean!
  name: String!
  power: Int!
  sp: Int!
  type: MoveType!
}

"""attribute of move in game"""
enum MoveAttribute {
  Dark
  Earth
  Electric
  Fire
  Light
  Neutral
  Plant
  Water
  Wind
}

"""type of move in game"""
enum MoveType {
  Direct
  Fixed
  Magic
  Physical
  Support
}

type Query {
  abilities: [Ability!]!
  digimons: [Digimon]!
  moves: [Move!]!
}